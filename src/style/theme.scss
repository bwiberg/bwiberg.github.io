@import "./utils.scss";

body {
  /* Permalink - use to edit and share this gradient: http://colorzilla.com/gradient-editor/#f7fbfc+0,d9edf2+40,add9e4+100;Blue+3D+%231 */
  background: rgb(247,251,252); /* Old browsers */
  background: -moz-linear-gradient(-45deg, rgba(247,251,252,1) 0%, rgba(217,237,242,1) 40%, rgba(173,217,228,1) 100%); /* FF3.6-15 */
  background: -webkit-linear-gradient(-45deg, rgba(247,251,252,1) 0%,rgba(217,237,242,1) 40%,rgba(173,217,228,1) 100%); /* Chrome10-25,Safari5.1-6 */
  background: linear-gradient(135deg, rgba(247,251,252,1) 0%,rgba(217,237,242,1) 40%,rgba(173,217,228,1) 100%); /* W3C, IE10+, FF16+, Chrome26+, Opera12+, Safari7+ */
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#f7fbfc', endColorstr='#add9e4',GradientType=1 ); /* IE6-9 fallback on horizontal gradient */
}

@mixin border-radius($corners: "") {
  @if (type_of($corners) == string) {
    border-radius: 4px;
  }
  @else {
    $corners: quote($corners);
    @if (includes($corners, "top-right")) {
      border-top-right-radius: 4px;
    }
    @if (includes($corners, "top-left")) {
      border-top-left-radius: 4px;
    }
    @if (includes($corners, "bottom-right")) {
      border-bottom-right-radius: 4px;
    }
    @if (includes($corners, "bottom-left")) {
      border-bottom-left-radius: 4px;
    }
  }
}

.card {
  background: #fff;
  @include border-radius;
  display: inline-block;
  height: 300px;
  margin: 1rem;
  position: relative;
  width: 300px;

  &.-hoverable:hover {
    box-shadow: 0 14px 28px rgba(0, 0, 0, 0.25), 0 10px 10px rgba(0, 0, 0, 0.22);
  }

  &.-level-1 {
    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24);
  }

  &.-level-2 {
    box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23);
  }

  &.-level-3 {
    box-shadow: 0 10px 20px rgba(0, 0, 0, 0.19), 0 6px 6px rgba(0, 0, 0, 0.23);
  }

  &.-level-4 {
    box-shadow: 0 14px 28px rgba(0, 0, 0, 0.25), 0 10px 10px rgba(0, 0, 0, 0.22);
  }

  &.-level-5 {
    box-shadow: 0 19px 38px rgba(0, 0, 0, 0.30), 0 15px 12px rgba(0, 0, 0, 0.22);
  }
}

@mixin skew($degrees) {
  @include transform(rotate($degrees * 1deg) skew($degrees * 1deg, 0));
}

.skew-5 {
  @include skew(-5);
}

.skew-10 {
  @include skew(-10);
}

.skew-15 {
  @include skew(-15);
}

.skew-20 {
  @include skew(-20);
}

.skew-25 {
  @include skew(-25);
}
